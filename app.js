//We are grabbing all the divs and spans from the html within
//varabiles or const below
//caching the DOM the elements, we are storing them in varabiles for later
// its better for perfomrance it easier to locate

// regular varabiles.
let usersScore = 0;
let computerScore=0;

// Dom elements; is something like a div html body element on a page.
//these are in a span tag in html line 17
const usersScore_span = document.getElementById("user-score");
const computerScore_span = document.getElementById("computer-score");

// The Document method querySelector() returns the first Element
//within the document that matches the specified selector, or group
//of selectors. If no matches are found, null is returned.
const scoreBoard_div= document.querySelector(".score-board");
//get the paragraph tag under the result div container
const result_p= document.querySelector(".result>p");

//each individual choice rock paper scissors
const scissors_div= document.getElementById("scissors");
const rock_div= document.getElementById("rock");
const paper_div= document.getElementById("paper");

// get Computer choice is a random varabile
//now in this function i was the computer to know that it has option to choice
// so i made a varible / const of choice that holds a list of choices.
// the choices are in an array and they are stringed values so they need a ''
function getcomputersChoice() {
  const choices =[ 'rock', 'paper', 'scissors'];
  // Math is a built in object in javascript.
  //And random is a method that exist in the math object.
  //it gives back a random number between 0-1. but we have 3 options
  // so we need to multiply the random number by 3
  //Math.floor(x) returns the value of x rounded down to its nearest integer:
// we will store the random answer generated by the computer in a const
  const randomNumber= Math.floor(Math.random()*3);
  //i want to then get ready to showcase it's answer so ill return the value
  return choices [randomNumber];
}

function convert(casing){
  if (casing === "rock") return "Rock";
  if (casing === "paper") return "Paper";
  //if none these then just return
  return "Scissors";
}
//when a user or computer wins the score goes up and shows in scoreboard
//the script is attached to the innerHTML so the classes for user and comp score
//this part defines a function
//user computer as parameters
function win(usersChoice, computersChoice) {
  //ES6 no need to write like this "hello" + "world"
  //now you can do this `hello world`
  //sub add word to bottom inline
  //This just helps us see what each person picked
  const smallUserWord= "user".fontsize(3).sub();
  const smallCompWord= "cpu".fontsize(3).sub();
  //this const usersChoice serves as a short hand so my last rules look shorter
  const usersChoice_div= document.getElementById(usersChoice);
  usersScore++;
  usersScore_span.innerHTML = usersScore;
  computerScore_span.innerHTML= computerScore;
  result_p.innerHTML = `${convert(usersChoice)}${smallUserWord}beats ${convert(computersChoice)}${smallCompWord}, You Win!`;
  //get the users choice what ever user clicks on but will light up if a win
  usersChoice_div.classList.add('green-glow');
  // ES5 setTimeout(function() { usersChoice_div.classList.remove('green-glow') }, 400);
  //ES6 below
  setTimeout(() => usersChoice_div.classList.remove('green-glow'), 400);
}

//Rules before the game starts what to do if the person wins loses or a tie
function lose(usersChoice, computersChoice) {
  const smallUserWord= "user".fontsize(3).sub();
  const smallCompWord= "cpu".fontsize(3).sub();
  const usersChoice_div= document.getElementById(usersChoice);
  computerScore++;
  usersScore_span.innerHTML = usersScore;
  computerScore_span.innerHTML= computerScore;
  result_p.innerHTML = `${convert(usersChoice)}${smallUserWord}loses to ${convert(computersChoice)}${smallCompWord}, You Lost!`;
  //get the users choice what ever user clicks on but will light up if a win
  usersChoice_div.classList.add('red-glow');
  setTimeout(() => usersChoice_div.classList.remove('red-glow'), 400);
}

//set time out takes 2 functions, second argument it takes is the time it should take
function draw(usersChoice, computersChoice) {
  const smallUserWord= "user".fontsize(3).sub();
  const smallCompWord= "cpu".fontsize(3).sub();
  const usersChoice_div= document.getElementById(usersChoice);
  result_p.innerHTML = `${convert(usersChoice)}${smallUserWord}equals ${convert(computersChoice)}${smallCompWord}, Its a draw!`;
  //get the users choice what ever user clicks on but will light up if a win
  usersChoice_div.classList.add('gray-glow');
  setTimeout(() => usersChoice_div.classList.remove('gray-glow'), 400);
}
//usersChoice is just a varabile name i selected to pretty much know that
//thw function is listening to what ever i choose to pick.
// this runs all functions
function game(usersChoice) {
  const computersChoice =getcomputersChoice();
  switch (usersChoice + computersChoice) {
    //outcomes scenerios if the computer  vs human
    //IN THIS CASE IF I MAKE THESE MOVES I WIN
  case"paperrock":
  case "scissorspaper":
  case "rockscissors":
    win(usersChoice,computersChoice);
    //break is like else and case is IF
    //IF THE COMPUTER MAKES THESE MOVE COMBINATIONS IT WINS
    break;
  case "rockpaper":
  case "paperscissors":
  case "scissorsrock":
    lose(usersChoice,computersChoice);
    //If we make the same move it's a draw
    break;
  case "rockrock":
  case "paperpaper":
  case "scissorsscissors":
    draw(usersChoice,computersChoice);


}
  }

// adding an event listener to each object rock paper scissor so it know
//that when we click on a object it then will compare it to see who wins
// i dont want to console log so i have to make this into a game
// i will wrap this section into a function of main, then i will
//define game
//functions are first-class objects, because they can have properties and
//methods just like any other object.
//kind of like a container or a div but for javascript

function main() {
  rock_div.addEventListener('click', function() {
    game("rock");
  })

  scissors_div.addEventListener('click', function() {
    game("scissors");
  })

  paper_div.addEventListener('click', function() {
    game("paper");
  })
}

//to run the main function you have to call it
main();
